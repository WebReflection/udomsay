/*! (c) Andrea Giammarchi */
const{is:t}=Object;let e;const s=t=>{const s=e;e=s||[];try{if(t(),!s)for(const{value:t}of e);}finally{e=s}};class n{constructor(t){this._=t}then(){return this.value}toJSON(){return this.value}toString(){return this.value}valueOf(){return this.value}}let o;class r extends n{constructor(t,e,s,n){super(t),this.f=n,this.$=!0,this.r=new Set,this.s=new p(e,s)}get value(){if(this.$){const t=o;o=this;try{this.s.value=this._(this.s._)}finally{this.$=!1,o=t}}return this.s.value}}const i={async:!1,equals:!0},c=(t,e,s=i)=>new r(t,e,s,!1);let l;const a=()=>{},h=({s:t})=>{"function"==typeof t._&&(t._=t._())};class u extends r{constructor(t,e,s){super(t,e,s,!0),this.i=0,this.a=!!s.async,this.m=!0,this.e=[]}get value(){this.a?this.async():this.sync()}async(){this.m&&(this.m=!1,queueMicrotask((()=>{this.m=!0,this.sync()})))}sync(){const t=l,{e:e}=l=this;if(this.i=0,h(this),super.value,this.i<e.length)for(const t of e.splice(this.i))t.stop();for(const{value:t}of e);l=t}stop(){h(this),this._=a,this.r.clear(),this.s.c.clear();for(const t of this.e.splice(0))t.stop()}}const f=()=>!1;class p extends n{constructor(e,{equals:s}){super(e),this.c=new Set,this.s=!0===s?t:s||f}peek(){return this._}get value(){return o&&(this.c.add(o),o.r.add(this)),this._}set value(t){const s=this._;if(!this.s(this._=t,s)&&this.c.size){const t=[],s=[this];for(const e of s)for(const n of e.c)if(!n.$&&n.r.has(e))if(n.r.clear(),n.$=!0,n.f){t.push(n);const e=[n];for(const t of e)for(const s of t.e)s.r.clear(),s.$=!0,e.push(s)}else s.push(n.s);for(const s of t)e?e.push(s):s.value}}}const d=(t,e=i)=>new p(t,e),g={async:!1},y=(t,e)=>((t,e,s=i)=>{let n;if(l){const{i:o,e:r}=l;o!==r.length&&r[o]._===t||(r[o]=new u(t,e,s)),n=r[o],l.i++}else(n=new u(t,e,s)).value;return()=>{n.stop()}})(t,e,g)
/*! (c) Andrea Giammarchi - ISC */,v=/^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i,_=/[&<>'"]/g,m=t=>k[t],k={"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"},w=t=>t.replace(_,m)
/*! (c) Andrea Giammarchi - ISC */,b=[],x=[],{isArray:$}=Array,{entries:N}=Object,S=(t,e)=>{const s=e?t.value:t;return null==s?"":s},M=t=>{switch(t){case"__token":case"key":case"is":return!1}return!0},j=(t,e)=>t[e].args,W=(t,e,s)=>{for(let n=0;n<e;n++)({args:s}=s[t[n]]);return s[t[e]].value},A=({childNodes:t},e)=>t[e],B=new Map;let C=!1;const q=(t,e)=>{C=!0,B.set(t,e)},O=(t,e,s,n)=>{if(C&&B.has(e))B.get(e)(t,s,n);else if(n.get(e)!==s){switch(e){case"class":e+="Name";case"className":case"textContent":(s||n.has(s))&&(t[e]=s);break;case"ref":s.current=t;break;default:e.startsWith("on")?t[e.toLowerCase()]=s:e in t?t[e]=s:null==s?t.removeAttribute(e):t.setAttribute(e,s)}n.set(e,s)}},E=(t,e,s,n)=>{const o=s.length;let r=e.length,i=o,c=0,l=0,a=null;for(;c<r||l<i;)if(r===c){const e=i<o?l?s[l-1].nextSibling:s[i-l]:n;for(;l<i;)t.insertBefore(s[l++],e)}else if(i===l)for(;c<r;)a&&a.has(e[c])||e[c].remove(),c++;else if(e[c]===s[l])c++,l++;else if(e[r-1]===s[i-1])r--,i--;else if(e[c]===s[i-1]&&s[l]===e[r-1]){const n=e[--r].nextSibling;t.insertBefore(s[l++],e[c++].nextSibling),t.insertBefore(s[--i],n),e[r]=s[i]}else{if(!a){a=new Map;let t=l;for(;t<i;)a.set(s[t],t++)}if(a.has(e[c])){const n=a.get(e[c]);if(l<n&&n<i){let o=c,h=1;for(;++o<r&&o<i&&a.get(e[o])===n+h;)h++;if(h>n-l){const o=e[c];for(;l<n;)t.insertBefore(s[l++],o)}else t.replaceChild(s[l++],e[c++])}else c++}else e[c++].remove()}return s};
/*! (c) Andrea Giammarchi - ISC */
class T{constructor(t,e,s,n,o){this.fragment="symbol"==t,this.type=t,this.child=e,this.tree=s,this.details=n,this.html=o}next(t,e,s){return new T(t,this.child.concat(e),s,this.details,this.html)}push(t,e=!1,s=this.child,n=this.tree){this.details.push({child:s,tree:n,props:t,hole:e})}}class L{constructor(t){this.value=t}}class z{constructor(){this.__token=null,this.store=null,this.nodes=x}}class H extends z{constructor(t){super().key=t}}class J{constructor(t){this.args=t,this.updates=[]}refresh(t){t!==this.args&&(this.args=t,this.update())}update(){for(const t of this.updates)t(this.args)}}class R extends J{constructor(t){super(t),this.init=!0,this.keys=x,this.result=null,this.dispose=y((()=>{const{init:t,args:e}=this;let[s,n,...o]=e;if(t&&(this.init=!1,n))if(n instanceof L)this.keys=b,n=n.value;else{let t=x;for(const[e,s]of N(n))s instanceof L&&((t===x?t=[]:t).push(e),n[e]=s.value);this.keys=t}this.result=s(n,...o),t||this.update()}))}refresh(t){if(t!==this.args){let[e,s,...n]=this.args=t;const{keys:o}=this;if(o===b)s=s.value;else if(o!==x)for(const t of o)s[t]=s[t].value;this.result=e(s,...n),this.update()}}update(){const{updates:t,result:{args:e}}=this;for(const s of t)s(e)}}
/*! (c) Andrea Giammarchi - ISC */const D=Symbol();function F(t){return{type:typeof t,args:arguments}}const G=t=>new L(t),I=new WeakMap,K=(t,e)=>{"function"==typeof t&&(t=t());const{type:s,args:n}=t,{__token:o}=n[1];let r=I.get(e);if(!r||r.__token!==o){const[t,i]=ot(o,s,n);I.set(e,r={__token:o,updates:[]}),e.replaceChildren(Y(t,i,r.updates))}for(const t of r.updates)t(n)};let{document:P}=globalThis;const Q=t=>{P=t};function U(t,e){const{type:s,html:n}=this,{length:o}=arguments;switch(s){case"string":if(n.push(`<${t}`),e){const{is:t}=e;if(t&&n.push(` is="${t}"`),e instanceof L)this.push(b);else{const t=[];for(const[s,o]of N(e))M(s)&&(o instanceof L?t.push(s):n.push(` ${"className"===s?"class":s}="${w(o)}"`));t.length&&this.push(t)}}return 2===o?n.push(v.test(t)?" />":`></${t}>`):(n.push(">"),Z.apply(this,arguments),n.push(`</${t}>`)),1;case"function":return n.push("\x3c!--ðŸ™Š--\x3e"),this.push(x),1;case"symbol":return Z.apply(this,arguments)}throw new Error(t)}const V=(t,e,s,n)=>{const o=Y(t,e,s);return n?[o]:[...o.childNodes]},X=(t,e,s)=>{let n;if(t){const{length:t}=e;if(t){const o=e[t-1];n=e.slice(0,-1).concat(o+s)}else n=x}else n=e.concat(s);return n},Y=(t,e,s)=>{const o=P.importNode(t,!0);return((t,e,s)=>{for(const{child:o,tree:r,props:i,hole:c}of e){const e=r.reduce(A,t),l=o.length-1;if(i===x){const t=s.push(c?r=>{const i=W(o,l,r);if("object"==typeof i)if($(i)){const{parentNode:n}=e;let c=!1,l=null,a=x,h=x;(s[t]=(t,s=W(o,u,t))=>{const r=[],i=[],{length:u}=a;let f=0;for(;f<s.length;f++){const t=f<u,e=s[f],{__token:n,key:o}=e.args[1];c||void 0===o||(c=!0,l={});let h=t?a[f]:null;t&&n===h.__token&&(!c||o.value===h.key)||c&&(h=l[o.value])?it(h,e):(c?(h=new H(o.value),l[o.value]=h):h=new z,rt(h,n,e)),i.push(h),r.push(...h.nodes)}if(f){if(c)for(;f<u;f++)delete l[a[f].key];h=E(n,h,r,e),a=i}else{const{length:t}=h;if(t){const e=P.createRange();e.setStartBefore(h[0]),e.setEndAfter(h[t-1]),e.deleteContents(),h=x,c&&(l={})}a=x}})(r,i)}else{const c=i instanceof n;if(c&&"object"!=typeof i.value)s[t]=lt(o,l,e,i,!0);else{const{parentNode:n}=e,a=new z;(s[t]=(t,s=W(o,l,t))=>{const r=c?s.value:s,{__token:i}=r.args[1];if(i===a.__token)it(a,r);else{const{nodes:t}=a;rt(a,i,r),E(n,t,a.nodes,e)}})(r,i)}}else s[t]=lt(o,l,e,i,!1)}:n=>{const[r,[i,c]]=et(o.reduce(j,n));e.replaceWith(Y(i,c,r.updates)),s[t]=t=>{r.refresh(o.reduce(j,t))},r.update()})-1}else{const t=new Map;s.push(i===b?s=>{const n=o.reduce(j,s)[1].value;for(const[s,o]of N(n))M(s)&&O(e,s,o,t)}:s=>{const n=o.reduce(j,s)[1];for(const s of i)O(e,s,n[s].value,t)})}}})(o,e,s),o};function Z(t,e){const{fragment:s,child:n,tree:o,html:r}=this,i=s&&!e?.__token;let c=0;for(let t=2;t<arguments.length;t++){const e=arguments[t];if("object"==typeof e)if(e instanceof L)r.push("\x3c!--ðŸ™Š--\x3e"),this.push(x,!0,n.concat(t),X(i,o,c++));else{const{type:s,args:n}=e;c+=U.apply(this.next(s,t,X(i,o,c)),n)}else c++,r.push(e)}return c}const tt=new WeakMap,et=t=>{const e=new R(t);let s=tt.get(t[0]);if(!s){const{type:n,args:o}=e.result;tt.set(t[0],s=st.apply(n,o))}return[e,s]};function st(){const t=new T(this,x,x,[],[]);U.apply(t,arguments);const e=P.createElement("template");e.innerHTML=t.html.join("");const{content:s}=e;return["symbol"==this?s:s.childNodes[0],t.details]}const nt=new WeakMap,ot=(t,e,s)=>{let n=nt.get(t);return n||nt.set(t,n=st.apply(e,s)),n},rt=(t,e,s)=>{if(t.__token=e,"function"===s.type){const[e,[n,o]]=et(s.args),{result:r,updates:i}=t.store=e;t.nodes=V(n,o,i,"symbol"!==r.type)}else ct(t,e,s,"string"===s.type);t.store.update()},it=({store:t},{args:e})=>{t.refresh(e)},ct=(t,e,{type:s,args:n},o)=>{const[r,i]=ot(e,s,n),{updates:c}=t.store=new J(n);t.nodes=V(r,i,c,o)},lt=(t,e,s,n,o)=>{const r=P.createTextNode(S(n,o));return s.replaceWith(r),s=>{r.data=S(W(t,e,s),o)}};export{D as Fragment,n as Signal,s as batch,c as computed,F as createElement,y as effect,G as interpolation,K as render,d as signal,Q as useDocument,q as useProperty};
